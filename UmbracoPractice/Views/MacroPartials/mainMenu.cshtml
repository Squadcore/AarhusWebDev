@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Web

@*
    This snippet displays a list of links of the pages immediately under the top-most page in the content tree.
    This is the home page for a standard website.
    It also highlights the current active page/section in the navigation with the CSS class "current".
*@

@{ var root = Model.Content.Site(); }
@{ var selection = root.Children.Where(x => x.IsVisible()).ToArray();
    
}

@{IEnumerable<IPublishedContent> items = Umbraco.TypedContentAtRoot()    
.First() //Root document
.Children() //Level 2 documents
.Where(x => x.DocumentTypeAlias== "projectsOverview")
.First() //Projects overview document
.Children() //Projects documents
//.Where(x => x.HasValue("projectStatus") && Umbraco.GetPreValueAsString(x.GetPropertyValue<int>("projectStatus")) == "Completed")
.Where(x => x.IsVisible()) // Only visible documents
.OrderByDescending(x => x.CreateDate); //Newest projects first
}


<nav class="navbar navbar-expand-lg navbar-light bg-dark">
    <a class="navbar-brand" href="/">Aarhus Web Developer Corporation</a>
    <div class="collapse navbar-collapse justify-content-end" id="navbarSupportedContent">
        <ul class="navbar-nav ">
            <li class="nav-item @((Model.Content.Name== root.Name) ? " active" : null)">
                <a class="nav-link" href="/">@root.Name</a>
            </li>

            @if (selection.Length > 0)
            {
            foreach (var menuItem in selection)
            {
            
            if (menuItem.Name == "Our Projects")
            {

            <li class="nav-item dropdown">
                <a class="dropdown-toggle nav-link" id="navbarDropdown" role="button"
                   data-toggle="dropdown" href="@menuItem.Url">@menuItem.Name</a>
                <div class="dropdown-menu navbar-link">

                    @foreach (IPublishedContent subMenuItem in items)
                    {
                    var isProtected = umbraco.library.IsProtected(subMenuItem.Id, menuItem.Path);
                    var loginAccess = umbraco.library.IsProtected(subMenuItem.Id, menuItem.Path)
                    && umbraco.library.HasAccess(subMenuItem.Id, menuItem.Path);
                    if(!isProtected|| loginAccess) {

                    <a class="dropdown-item" href="@subMenuItem.Url">@subMenuItem.Name</a>

                    }
                    }

                    <a class="dropdown-item" href="/our-projects">More Projects</a>
                </div>
            </li>
            }


            else {
            <li class="nav-item">
                <a class="nav-link" href="@menuItem.Url">@menuItem.Name</a>
            </li>
            }
            
            }
            }
        </ul>
</div>
</nav>